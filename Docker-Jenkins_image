Create Your Custom Jenkins Dockerfile
ðŸ“„ Dockerfile
FROM jenkins/jenkins
USER root
# Install Docker CLI
RUN apt-get update && \
    apt-get install -y docker.io && \
    usermod -aG docker jenkins

USER jenkins
âœ… Explanation:
USER root: Needed to install packages and modify groups.
apt-get install docker.io: Installs Docker CLI inside Jenkins image.
usermod -aG docker jenkins: So Jenkins user can run Docker without sudo.
USER jenkins: Return to Jenkins user so container starts Jenkins properly.
 Simple docker-compose.yml to Run Jenkins with Docker Access
Here's a full working example:
 docker-compose.yml
version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins
    user: root
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    container_name: jenkins-docker
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock

volumes:
  jenkins_home:

 Explanation:
Component
Purpose
user: root
Lets you install packages or run Docker
- /var/run/docker.sock:/...
Mounts host Docker socket into container
jenkins_home volume
Persists Jenkins data
DOCKER_HOST=...
Helps tools like Docker CLI locate the daemon


ðŸ§ª How to Use It
Save the above as docker-compose.yml
Run:    docker compose up -d
Access Jenkins at: http://localhost:8080
Inside Jenkins (or docker exec -it jenkins-docker bash):
docker ps          # âœ… should now work!


